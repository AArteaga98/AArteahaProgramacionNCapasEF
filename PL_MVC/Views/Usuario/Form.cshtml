@model ML.Usuario
@{
    ViewBag.Title = "Form";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<div class="container">
    <h2>FORM</h2>
    <div class="row">
        <div class="col-md-12">
            @using (Html.BeginForm("Form", "Usuario", FormMethod.Post, new { enctype = "multipart/form-data" }))
            {
                <div class="form-horizontal">
                    <div class="form-group">
                        <div class="col-md-3">
                            @Html.LabelFor(model => model.IdUsuario, new { @class = "hidden" })
                            @Html.TextBoxFor(model => model.IdUsuario, new { @class = "hidden form-control" })
                            @Html.ValidationMessageFor(model => model.IdUsuario)

                        </div>
                    </div>

                    <div class="form-group">
                        <div class="col-md-3">
                            @Html.LabelFor(model => model.Nombre)
                            @Html.TextBoxFor(model => model.Nombre, new { @class = " form-control", @id = "txtNombre" })
                            @Html.ValidationMessageFor(model => model.Nombre)

                        </div>
                    </div>

                    <div class="form-group">
                        <div class="col-md-3">


                            @Html.LabelFor(model => model.ApellidoPaterno)
                            @Html.TextBoxFor(model => model.ApellidoPaterno, new { @class = "form-control" })
                            @Html.ValidationMessageFor(model => model.ApellidoPaterno)
                        </div>
                    </div>

                    <div class="form-group">
                        <div class="col-md-3">
                            @Html.LabelFor(model => model.ApellidoMaterno)
                            @Html.TextBoxFor(model => model.ApellidoMaterno, new { @class = "form-control" })
                            @Html.ValidationMessageFor(model => model.ApellidoMaterno)
                        </div>
                    </div>

                    <div class="form-group">
                        <div class="col-md-3">
                            @Html.LabelFor(model => model.FechaNacimiento)
                            @Html.TextBoxFor(model => model.FechaNacimiento, new { @class = "form-control" })
                            @Html.ValidationMessageFor(model => model.FechaNacimiento)

                        </div>
                    </div>

                    <div class="form-group">
                        <div class="col-md-3">
                            @Html.LabelFor(model => model.Genero)
                            @Html.TextBoxFor(model => model.Genero, new { @class = "form-control" })
                            @Html.ValidationMessageFor(model => model.Genero)

                        </div>
                    </div>

                    <div class="form-group">
                        <div class="col-md-3">
                            @Html.LabelFor(model => model.UserName)
                            @Html.TextBoxFor(model => model.UserName, new { @class = "form-control" })
                            @Html.ValidationMessageFor(model => model.UserName)

                        </div>
                    </div>

                    <div class="form-group">
                        <div class="col-md-3">
                            @Html.LabelFor(model => model.Email)
                            @Html.TextBoxFor(model => model.Email, new { @class = "form-control" })
                            @Html.ValidationMessageFor(model => model.Email)

                        </div>
                    </div>

                    <div class="form-group">
                        <div class="col-md-3">
                            @Html.LabelFor(model => model.Password)
                            @Html.TextBoxFor(model => model.Password, new { @class = "form-control", @type = "password" })
                            @Html.ValidationMessageFor(model => model.Password)

                        </div>
                    </div>

                    <div class="form-group">
                        <div class="col-md-3">
                            @Html.LabelFor(model => model.Telefono)
                            @Html.TextBoxFor(model => model.Telefono, new { @class = "form-control" })
                            @Html.ValidationMessageFor(model => model.Telefono)

                        </div>
                    </div>

                    <div class="form-group">
                        <div class="col-md-3">
                            @Html.LabelFor(model => model.Celular)
                            @Html.TextBoxFor(model => model.Celular, new { @class = "form-control" })
                            @Html.ValidationMessageFor(model => model.Celular)

                        </div>
                    </div>

                    <div class="form-group">
                        <div class="col-md-3">
                            @Html.LabelFor(model => model.CURP)
                            @Html.TextBoxFor(model => model.CURP, new { @class = "form-control" })
                            @Html.ValidationMessageFor(model => model.CURP)

                        </div>
                    </div>

                    <div class="form-group">
                        <div class="col-md-3">
                            @Html.LabelFor(model => model.Rol.IdRol)
                            @*@Html.TextBoxFor(model => model.Rol.IdRol, new { @class = "form-control" })*@
                            @Html.DropDownListFor(model => model.Rol.IdRol, new SelectList(Model.Rol.Roles, "IdRol", "Nombre"), "Selecciona un rol", new { @class = "form-control" })
                            @Html.ValidationMessageFor(model => model.Rol.IdRol)
                        </div>
                    </div>

                    @*<div class="form-group">
                            <div class="col-md-3">
                                @Html.LabelFor(model => model.Imagen)
                                <input id="file-upload" type="file" name="ImagenData" />

                                @if (Model.Imagen != null)
                                {
                                    <img id="file-upload" src="data:image/*" style=" height:150px; width:150px;  "/>


                                }
                                else
                                {
                                    <img id="file-upload" src="~/Imagen/userdef.jpg" style=" height:150px; width:150px;  " />
                                }

                                @Html.ValidationMessageFor(model => model.Imagen)
                                <div id="file-preview-zone">

                                </div>
                            </div>
                            @Html.HiddenFor(model => model.Imagen)

                        </div>*@

                    <div class="form-group">
                        <div class="col-md-4">
                            @Html.LabelFor(model => model.Imagen)
                            <input type="file" name="ImagenData" onchange="Previsualizar(this);">
                            @if (Model.Imagen != null)
                            {

                                <img id="ImagenPreview" src="data:image/jpeg;base64,@Convert.ToBase64String(Model.Imagen)" width="200" height="200" />
                            }
                            else
                            {
                                <img id="ImagenPreview" src="~/Imagen/userdef.jpg" style=" height:200px; width:200px;" />
                            }
                            @Html.ValidationMessageFor(model => model.Imagen)
                        </div>
                        @Html.HiddenFor(model => model.Imagen)


                    
                </div>


                <div class="form-group">
                    <div class="col-md-3">
                        @Html.LabelFor(model => model.Direccion.Colonia.Municipio.Estado.Pais.IdPais)

                        @Html.DropDownListFor(model => model.Direccion.Colonia.Municipio.Estado.Pais.IdPais, new SelectList(Model.Direccion.Colonia.Municipio.Estado.Pais.Paises, "IdPais", "Nombre"), "Selecciona una opción", new { id = "ddlPais", @class = "form-control" })

                        @Html.ValidationMessageFor(model => model.Direccion.Colonia.Municipio.Estado.Pais.IdPais)



                    </div>
                </div>
                <div class="form-group">
                    <div class="col-md-3">
                        @if (Model.Direccion.Colonia.Municipio.Estado.Estados == null)
                        {
                            @Html.DropDownListFor(model => model.Direccion.Colonia.Municipio.Estado.IdEstado, new SelectList(string.Empty, "Value", "Text"), "Seleciona un Estado", htmlAttributes: new { id = "ddlEstado", @class = "form-control" })
                        }

                        else
                        {
                            @Html.DropDownListFor(model => model.Direccion.Colonia.Municipio.Estado.IdEstado, new SelectList(Model.Direccion.Colonia.Municipio.Estado.Estados, "IdEstado", "Nombre"), "Seleciona un Estado", htmlAttributes: new { id = "ddlEstado", @class = "form-control" })
                        }
                    </div>
                </div>

                <div class="form-group">
                    <div class="col-md-3">
                        @if (Model.Direccion.Colonia.Municipio.Municipios == null)
                        {
                            @Html.DropDownListFor(model => model.Direccion.Colonia.Municipio.IdMunicipio, new SelectList(string.Empty, "Value", "Text"), "Seleciona un Municipio", htmlAttributes: new { id = "ddlMunicipio", @class = "form-control" })
                        }

                        else
                        {
                            @Html.DropDownListFor(model => model.Direccion.Colonia.Municipio.IdMunicipio, new SelectList(Model.Direccion.Colonia.Municipio.Municipios, "IdMunicipio", "Nombre"), "Seleciona un Municipio", htmlAttributes: new { id = "ddlMunicipio", @class = "form-control" })
                        }
                    </div>
                </div>

                <div class="form-group">
                    <div class="col-md-3">
                        @Html.LabelFor(model => model.Direccion.IdDireccion, new { @class = "hidden" })
                        @Html.TextBoxFor(model => model.Direccion.IdDireccion, new { @class = " hidden form-control" })
                        @Html.ValidationMessageFor(model => model.Direccion.IdDireccion)

                    </div>
                </div>

                <div class="form-group">
                    <div class="col-md-3">
                        @Html.LabelFor(model => model.Direccion.Calle)
                        @Html.TextBoxFor(model => model.Direccion.Calle, new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.Direccion.Calle)

                    </div>
                </div>

                <div class="form-group">
                    <div class="col-md-3">
                        @Html.LabelFor(model => model.Direccion.NumeroInterior)
                        @Html.TextBoxFor(model => model.Direccion.NumeroInterior, new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.Direccion.NumeroInterior)
                    </div>
                </div>
                <div class="form-group">
                    <div class="col-md-3">

                        @Html.LabelFor(model => model.Direccion.NumeroExterior)
                        @Html.TextBoxFor(model => model.Direccion.NumeroExterior, new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.Direccion.NumeroExterior)


                    </div>
                </div>

                <div class="form-group">
                    <div class="col-md-3">
                        @if (Model.Direccion.Colonia.Colonias == null)
                        {
                            @Html.DropDownListFor(model => model.Direccion.Colonia.IdColonia, new SelectList(string.Empty, "Value", "Text"), "Seleciona una Colonia", htmlAttributes: new { id = "ddlColonia", @class = "form-control" })
                        }

                        else
                        {
                            @Html.DropDownListFor(model => model.Direccion.Colonia.IdColonia, new SelectList(Model.Direccion.Colonia.Colonias, "IdColonia", "Nombre"), "Seleciona una Colonia", htmlAttributes: new { id = "ddlColonia", @class = "form-control" })
                        }
                    </div>
                </div>

                <div class="form-group">
                    <div class="col-md-3">
                        @Html.LabelFor(model => model.Direccion.Usuario.IdUsuario, new { @class = "hidden" })
                        @Html.TextBoxFor(model => model.Direccion.Usuario.IdUsuario, new { @class = " hidden form-control" })
                        @Html.ValidationMessageFor(model => model.Direccion.Usuario.IdUsuario)

                    </div>
                </div>





                <div class="form-group">

                    <div class="col-md-3">

                        <input type="submit" value="Guardar" class="btn btn-success" />

                        @Html.ActionLink("Regresar", "GetAll", "Usuario", htmlAttributes: new { @class = "btn btn-danger" })

                    </div>

                </div>

            </div>

        }

        </div>

    </div>

    </div>

    @*Estado*@

    @Scripts.Render("~/bundles/jquery")
    <script type="text/javascript">
    $(document).ready(function () {
        $("#ddlPais").change(function () {
            $("#ddlEstado").empty();
            $.ajax({
                type: 'POST',
                url: '@Url.Action("GetEstado")',
                dataType: 'json',
                data: { IdPais: $("#ddlPais").val() },
                success: function (estados) {
                    $("#ddlEstado").append('<option value="0">' + 'Seleccione una opción' + '</option>');
                    $.each(estados, function (i, estados) {
                        $("#ddlEstado").append('<option value="'
                            + estados.IdEstado + '">'
                            + estados.Nombre + '</option>');
                    });
                },
                error: function (ex) {
                    alert('Failed.' + ex);
                }
            });
        })
    })
    </script>

    @* Municipio*@

    @Scripts.Render("~/bundles/jquery")
    <script type="text/javascript">
    $(document).ready(function () {
        $("#ddlEstado").change(function () {
            $("#ddlMunicipio").empty();
            $.ajax({
                type: 'POST',
                url: '@Url.Action("GetMunicipio")',
                dataType: 'json',
                data: { IdEstado: $("#ddlEstado").val() },
                success: function (municipios) {
                    $("#ddlMunicipio").append('<option value="0">' + 'Seleccione un Municipio' + '</option>');
                    $.each(municipios, function (i, municipios) {
                        $("#ddlMunicipio").append('<option value="'
                            + municipios.IdMunicipio + '">'
                            + municipios.Nombre + '</option>');
                    });
                },
                error: function (ex) {
                    alert('Failed.' + ex);
                }
            });
        })
    })
    </script>

    @* Colonia*@

    @Scripts.Render("~/bundles/jquery")
    <script type="text/javascript">
    $(document).ready(function () {
        $("#ddlMunicipio").change(function () {
            $("#ddlColonia").empty();
            $.ajax({
                type: 'POST',
                url: '@Url.Action("GetColonia")',
                dataType: 'json',
                data: { IdMunicipio: $("#ddlMunicipio").val() },
                success: function (colonias) {
                    $("#ddlColonia").append('<option value="0">' + 'Seleccione una opción' + '</option>');
                    $.each(colonias, function (i, colonias) {
                        $("#ddlColonia").append('<option value="'
                            + colonias.IdColonia + '">'
                            + colonias.Nombre + '</option>');
                    });
                },
                error: function (ex) {
                    alert('Failed.' + ex);
                }
            });
        })
    })
    </script>


    @*IMAGEN FORMA 1*@
    @*<script>

            function readFile(input) {

                if (input.files && input.files[0]) {

                    var reader = new FileReader();



                    reader.onload = function (e) {

                        var filePreview = document.createElement('img');

                        filePreview.id = 'file-preview';

                        //e.target.result contents the base64 data from the image uploaded

                        filePreview.src = e.target.result;

                        console.log(e.target.result);



                        var previewZone = document.getElementById('file-preview-zone');

                        previewZone.appendChild(filePreview);

                    }



                    reader.readAsDataURL(input.files[0]);

                }

            }



            var fileUpload = document.getElementById('file-upload');

            fileUpload.onchange = function (e) {

                readFile(e.srcElement);

            }



        </script>*@

    @*IMAGEN FORMA 2*@

    @*<script>
            function readURL(input)
            {
                if (input.files && input.files[0])
                {
                    var reader = new FileReader();
                    reader.onload = function (e) {
                        $('ImagenPreview').attr('src', e.target.result);
                    };
                    reader.readAsDataURL(input.files[0]);

                }

            }
        </script>*@

<script type="text/javascript">
    function Previsualizar(input) {
        if (input.files && input.files[0]) {
            var reader = new FileReader();
            reader.onload = function (e) {
                $('#ImagenPreview').attr('src', e.target.result);
            };
            reader.readAsDataURL(input.files[0]);
        }
    }
</script>